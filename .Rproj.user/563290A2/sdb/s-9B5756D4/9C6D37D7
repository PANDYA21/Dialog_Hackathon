{
    "collab_server" : "",
    "contents" : "## train the dialog service, and check the functionality.\n\n################################    START THE PIZZA PARTY  #########\n\nsource(\"udfs_dialog.R\")\n\n####### What Dialog ID's already exist?\nwatson.dialog.listapps()\n\n###### TEST FUNCTION OK ACTION: Create a new Dialog!  (200 = Good outcome) - \n##### Where to get files and background?  here: http://www.ibm.com/smarterplanet/us/en/ibmwatson/developercloud/doc/dialog/\n\n##### https://github.com/watson-developer-cloud/dialog-tool/blob/master/dialogs/pizza_sample.xml  # not all XML created equal - careful\nthefile <- \"ex1.xml\"   #you'll need a local, 'good' Dialog XML file, in the right directory,\nthename <- \"hack7\"\nresponse <-  watson.dialog.uploadfile(thefile,thename)  # Pushes XML to dialog API - should return NEW dialog_id if OK\nresponse #201?  if so, that's good\ncontent(response, \"text\") # \"{\\\"dialog_id\\\": \n#### end of test\n\nwatson.dialog.listapps() # do you see what i see?\n\n### OK - let's extract the dialog ID so we can start a conversation  \ndata <- watson.dialog.listapps() # returns FULL LIST of them, could be up to 10\ndialog_id <- data$dialog_id[grepl(thename, as.character(data$dialog_name))] #tail(data$dialog_id,1) ### LETS TAKE THE LATEST LAST ONE IF MORE THAN ONE DIALOG_ID\ndialog_id <- paste(dialog_id) # gets rid of levels\n\ndialog_id <- gsub(\"languagepacks\", \"\", dialog_id)\ndialog_id\n\n# dialog_id <- \"18f13a4f-2485-4d6b-ad5d-d8e2bfc5b38e\"\n\n## ACTION - Let's start a conversation!  LET'S BEGIN\nconv_id <- \"\" # needs to be blank to trigger new\ncl_id <- \"\" # needs to be blank to trigger new\ntext_input <- \"Good day!\"# \"*\" # \"Hi\" # doesnt really matter what our first input is \nresponse <-  watson.dialog.converse(dialog_id,conv_id,cl_id,text_input)  # first time through this should be blank (spawn a new one)\nresponse\n# cat(gsub(\",\", \",.\\n\", content(response, \"text\")))\ncat(getResponse(response))\n## OK NOW WE\"RE COOKING (Pizza!)\n## response\\\":[\\\"Hi, I'm Watson! I can help you order a pizza, what size would you like?\\\"]}\"\n\n### EXTRACT INFO FOR CONVERSATION ANCHOR - EXTRACT the conv Id and client id to CONTINUE - EXTRACT INFORMATION TO KEY OFF OF - Segue\ndata <- content(response,\"text\")\ndata <- as.data.frame(strsplit(as.character(data),'\\\"'))\nsetnames(data,c(\"V1\"))\ndata$V1 <- str_replace_all(data$V1, \"[[:punct:]]\", \"\") \ndata <- data[c(3,5,14), ] # cherry pick what we want - conv_id, client_id, and reponse\ndata <- data.frame(matrix(data)) # can tidy this method later\nsetnames(data,c(\"V1\"))\nconv_id <- toString(data$V1[1])\ncl_id <- toString(data$V1[2])\nwatson_response <-toString(data$V1[3])\ndialog_id # should still have this from opening round\n###### OK - we've extracted key information - can continue dialog!\nprint(cat(\"This is your CONVERSATION ANCHOR:\", \"\\n\", \"dialog_id = \", paste(dialog_id), \"\\n\",\n          \"conversation_id = \", conv_id, \"\\n\", \"client_id = \", cl_id ,\"\\n\", \"watson_response = \",watson_response,\"\\n\"))\n\n#  watson_response =  Hi Im Watson I can help you order a pizza what size would you like \n\n## ACTION - Let's CONTINUE the conversation!\ntext_input <- \"what cloths do you have?\" # spelling error intentional- dialog has some spelling skills\nresponse <-  watson.dialog.converse(dialog_id,conv_id,cl_id,text_input)\ncat(getResponse(response))\n\ntext_input <- \"i am a girl\"\nresponse <-  watson.dialog.converse(dialog_id,conv_id,cl_id,text_input)\ncat(getResponse(response))\nresponse.middle <- response\n\ntext_input <- \"I am 26\"\nresponse <-  watson.dialog.converse(dialog_id,conv_id,cl_id,text_input)\ncat(getResponse(response))\nresponse.last <- response\n\n############# DANGER ZONE\n############# DANGER ZONE\n\n# ## EXECUTE FUNCTION TO DELETES ONE DIALOG_ID - Just one - CAREFUL\n# watson.dialog.listapps() # find one to kill\n# dialog_id \n# watson.dialog.deletedialogID(dialog_id)\n# watson.dialog.listapps() # did we kill it? should be gone now\n# ## working 9/15/2015\n\n# ########## EXECUTE BE --  DANGER ---  DANGER ---   \n# watson.dialog.listapps() # we who are about to be deleted, salute you\n# watson.dialog.deletedialogALL()  ## CARFUL  - this is NUCLEAR Option - kills ALL! DANGER 200 Status = the job is done\n# watson.dialog.listapps() # did we kill it? should be gone now\n\n#EOF",
    "created" : 1466680387593.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3777181937",
    "id" : "9C6D37D7",
    "lastKnownWriteTime" : 1466698690,
    "last_content_update" : 1466698690484,
    "path" : "~/GitHub/Dialog_Hackathon/train_check_dialog.R",
    "project_path" : "train_check_dialog.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}